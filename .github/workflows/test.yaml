name: meson_test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-with-gcc:
    runs-on: ubuntu-22.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update &&
          sudo apt-get install \
            libwayland-dev libwlroots-dev libpixman-1-dev libxml2-dev \
            libopenvr-dev libxkbcommon-dev libglu1-mesa-dev libglew-dev weston

      - uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      - name: Install meson & ninja
        run: pip install meson ninja

      - name: Clone wlr-glew-renderer
        uses: actions/checkout@v2
        with:
          repository: zigen-project/wlr-glew-renderer
          path: wlr-glew-renderer

      - name: Build wlr-glew-renderer
        run: |
          meson build
          sudo meson install -C build --skip-subprojects
        working-directory: ./wlr-glew-renderer
        env:
          CC: gcc

      - name: Clone zen-remote
        uses: actions/checkout@v2
        with:
          repository: zigen-project/zen-remote
          path: zen-remote
      
      - name: Build zen-remote
        working-directory: ./zen-remote
        run: |
          cmake -B build
          cmake --build build -j
          sudo cmake --install build

      - name: create /usr/local/lib/pkgconfig
        run: sudo mkdir /usr/local/lib/pkgconfig

      - name: Clone tomlc99
        uses: actions/checkout@v2
        with:
          repository: cktan/tomlc99
          path: tomlc99

      - name: Rename "libtoml.pc.sample" to "libtoml.pc" 
        run: mv libtoml.pc.sample libtoml.pc
        working-directory: ./tomlc99

      - name: Build tomlc99
        run: sudo make install
        working-directory: ./tomlc99
        env:
          CC: gcc

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: main
          submodules: true

      - name: Build & Test
        run: |
          meson build
          ninja -C build test
        working-directory: ./main
        env:
          CC: gcc

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: zen-test-log
          path: main/build/meson-logs/
